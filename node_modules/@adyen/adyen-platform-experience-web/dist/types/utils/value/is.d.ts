import type { GetPredicateType } from '../types';
export declare const isBoolean: (value?: any) => value is boolean;
export declare const isFunction: <T>(value?: T | undefined) => value is GetPredicateType<(...args: any[]) => any, T>;
export declare const isNull: (value?: any) => value is null;
export declare const isNullish: (value?: any) => value is null | undefined;
export declare const isNumber: (value?: any) => value is number;
export declare const isPlainObject: <T>(value?: T | undefined) => value is GetPredicateType<Record<any, any>, T>;
export declare const isString: (value?: any) => value is string;
export declare const isSymbol: (value?: any) => value is symbol;
export declare const isUndefined: (value?: any) => value is undefined;
//# sourceMappingURL=is.d.ts.map