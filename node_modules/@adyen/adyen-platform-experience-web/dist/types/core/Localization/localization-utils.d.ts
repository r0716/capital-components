import Localization from './Localization';
import { loadTranslations } from './utils';
import type { CustomTranslations, Locale } from '../../translations';
export declare function createTranslationsLoader(this: Localization): {
    load: (customTranslations?: CustomTranslations) => ReturnType<typeof loadTranslations>;
    locale: `${Lowercase<string>}-${Uppercase<string>}`;
    supportedLocales: Locale[];
};
export declare function getLocalizationProxyDescriptors(this: Localization): {
    get: PropertyDescriptor;
    has: PropertyDescriptor;
    amount: PropertyDescriptor;
    date: PropertyDescriptor;
    timezone: PropertyDescriptor;
    readonly languageCode: PropertyDescriptor;
    readonly supportedLocales: PropertyDescriptor;
    locale: PropertyDescriptor;
    customTranslations: PropertyDescriptor;
    readonly lastRefreshTimestamp: PropertyDescriptor;
    readonly ready: PropertyDescriptor;
    fullDate: PropertyDescriptor;
};
//# sourceMappingURL=localization-utils.d.ts.map