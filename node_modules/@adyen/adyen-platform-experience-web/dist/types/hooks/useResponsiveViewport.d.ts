import type { ValueOfRecord } from '../utils/types';
export declare const mediaQueries: {
    readonly up: {
        readonly sm: "(min-width: 480px)";
        readonly md: "(min-width: 768px)";
        readonly lg: "(min-width: 1024px)";
    };
    readonly down: {
        readonly xs: `(max-width: ${number}px)`;
        readonly sm: `(max-width: ${number}px)`;
        readonly md: `(max-width: ${number}px)`;
    };
    readonly only: {
        readonly xs: `(max-width: ${number}px)`;
        readonly sm: `(min-width: 480px) and (max-width: ${number}px)`;
        readonly md: `(min-width: 768px) and (max-width: ${number}px)`;
        readonly lg: "(min-width: 1024px)";
    };
};
type _MediaQueries = typeof mediaQueries;
export type ResponsiveViewportMediaQuery = ValueOfRecord<{
    [K in keyof _MediaQueries]: ValueOfRecord<_MediaQueries[K]>;
} | {
    hello: `(prefers-color-scheme: dark)`;
}>;
export declare const useResponsiveViewport: (query: ResponsiveViewportMediaQuery) => boolean;
export {};
//# sourceMappingURL=useResponsiveViewport.d.ts.map