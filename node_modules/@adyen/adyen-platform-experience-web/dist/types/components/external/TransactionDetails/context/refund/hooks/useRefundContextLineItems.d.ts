import type { TransactionRefundProviderProps } from '../types';
type _BaseUseRefundContextLineItemsProps = Pick<TransactionRefundProviderProps, 'currency' | 'lineItems'>;
export declare const useRefundContextLineItems: <T extends _BaseUseRefundContextLineItemsProps>({ currency, lineItems }: T) => {
    readonly availableItems: readonly {
        amountIncludingTax: {
            currency: string;
            value: number;
        };
        availableQuantity: number;
        description: string;
        id: string;
        originalQuantity: number;
        reference: string;
        refundStatuses: {
            quantity: number;
            status: "in_progress" | "completed" | "failed";
        }[];
        sku?: string | undefined;
    }[];
    readonly clearItems: (ids?: string[] | undefined) => void;
    readonly items: readonly Readonly<{
        id: string;
        amount: number;
        quantity: number;
    }>[];
    readonly updateItems: (itemUpdates?: import("../types").TransactionRefundItemUpdates | undefined) => void;
};
export {};
//# sourceMappingURL=useRefundContextLineItems.d.ts.map