import { AlertTypeOption } from '../../../../internal/Alert/types';
import { RefundedState } from '../../context/types';
import type { TransactionDataProps } from '../../types';
export declare const useTransactionRefundMetadata: (transaction: TransactionDataProps['transaction']) => {
    readonly refundableAmount: number;
    readonly refundable: boolean;
    readonly refundableAmountLabel: {
        type: AlertTypeOption;
        description: string;
    } | null;
    readonly refundAvailable: boolean;
    readonly refundAuthorization: boolean;
    readonly refundCurrency: string;
    readonly refundDisabled: boolean;
    readonly refundedAmount: number;
    readonly refundedState: RefundedState;
    readonly refundStatuses: ({
        type: AlertTypeOption;
        label: string;
    } | undefined)[];
    readonly refundLocked: boolean;
    readonly refundMode: "non_refundable" | "partially_refundable_with_line_items_required" | "partially_refundable_any_amount" | "fully_refundable_only";
};
export default useTransactionRefundMetadata;
//# sourceMappingURL=useTransactionRefundMetadata.d.ts.map