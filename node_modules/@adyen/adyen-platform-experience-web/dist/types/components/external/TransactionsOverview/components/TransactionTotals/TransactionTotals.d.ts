import { OperationParameters } from '../../../../../types/api/endpoints';
import { WithPartialField } from '../../../../../utils/types';
import { ITransaction } from '../../../../../types';
import './TransactionTotals.scss';
type TransactionTotalsProps = Required<OperationParameters<'getTransactionTotals'>['query']> & {
    isAvailableCurrenciesFetching: boolean;
    availableCurrencies: ITransaction['amount']['currency'][] | undefined;
    fullWidth?: boolean;
};
declare const TransactionTotals: ({ availableCurrencies, isAvailableCurrenciesFetching, balanceAccountId, createdSince, createdUntil, categories, statuses, maxAmount, minAmount, currencies, fullWidth, }: WithPartialField<TransactionTotalsProps, 'balanceAccountId' | 'minAmount' | 'maxAmount'>) => import("preact/compat").JSX.Element;
export default TransactionTotals;
//# sourceMappingURL=TransactionTotals.d.ts.map