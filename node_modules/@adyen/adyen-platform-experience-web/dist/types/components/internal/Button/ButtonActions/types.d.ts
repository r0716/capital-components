import { ButtonVariant } from '../types';
import { ComponentChild } from 'preact';
export interface ButtonActionObject {
    title: string;
    event: (event: Event) => void;
    icon?: Node;
    disabled?: boolean;
    variant?: ButtonVariant;
    renderTitle?: (title: string) => ComponentChild;
    state?: 'loading' | 'default';
}
export type ButtonActionsList = ButtonActionObject[] | readonly ButtonActionObject[];
export declare enum ButtonActionsLayoutBasic {
    BUTTONS_END = "buttons-end",
    FILL_CONTAINER = "fill-container",
    SPACE_BETWEEN = "space-between",
    VERTICAL_STACK = "vertical-stack"
}
export declare enum ButtonActionsLayoutExtended {
    BUTTONS_START = "buttons-start"
}
export declare const ButtonActionsLayout: {
    BUTTONS_START: ButtonActionsLayoutExtended.BUTTONS_START;
    BUTTONS_END: ButtonActionsLayoutBasic.BUTTONS_END;
    FILL_CONTAINER: ButtonActionsLayoutBasic.FILL_CONTAINER;
    SPACE_BETWEEN: ButtonActionsLayoutBasic.SPACE_BETWEEN;
    VERTICAL_STACK: ButtonActionsLayoutBasic.VERTICAL_STACK;
};
export type ButtonActionsLayout = ButtonActionsLayoutBasic | ButtonActionsLayoutExtended;
//# sourceMappingURL=types.d.ts.map