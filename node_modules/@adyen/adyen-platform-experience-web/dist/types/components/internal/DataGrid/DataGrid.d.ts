import { ComponentChild } from 'preact';
import './DataGrid.scss';
import { DataGridColumn, DataGridProps } from './types';
export declare const INITIAL_STATE: Readonly<{
    activeIndex: -1;
    index: -1;
}>;
export type CustomCell<Item extends Array<any>, Columns extends Array<DataGridColumn<Extract<keyof Item[number], string>>>, T extends Columns[number]> = {
    [k in T['key']]?: (props: Item[0][k] extends NonNullable<Item[0][k]> ? {
        key: k;
        value: Item[number][k];
        item: Item[number];
        rowIndex: number;
    } : {
        key: k;
        item: Item[number];
        rowIndex: number;
    }) => ComponentChild;
};
declare function DataGrid<Items extends Array<any>, Columns extends Array<DataGridColumn<Extract<keyof Items[number], string>>>, ClickedField extends keyof Items[number], CustomCells extends CustomCell<Items, Columns, Columns[number]>>({ errorDisplay, ...props }: DataGridProps<Items, Columns, ClickedField, CustomCells>): import("preact").JSX.Element;
declare namespace DataGrid {
    var Footer: typeof DataGridFooter;
    var defaultProps: {
        condensed: boolean;
        outline: boolean;
        scrollable: boolean;
    };
}
declare function DataGridFooter({ children }: {
    children: ComponentChild;
}): import("preact").JSX.Element;
export default DataGrid;
//# sourceMappingURL=DataGrid.d.ts.map