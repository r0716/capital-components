import type { RangeTimestamp, RangeTimestampOffsets, RangeTimestampsConfig, RangeTimestampsConfigContext, RangeTimestampsConfigParameter, RangeTimestampsConfigParameterValue, RangeTimestampsConfigWithFromOffsets, RangeTimestampsConfigWithoutOffsets } from './types';
import { RestamperWithTimezone } from '../../../../../core/Localization/datetime/restamper';
export declare const createRangeTimestampsConfigRestampingContext: (restamper: RestamperWithTimezone) => {
    readonly systemToTimezone: TypedPropertyDescriptor<(time?: string | number | Date | undefined) => number>;
    readonly timezoneToSystem: TypedPropertyDescriptor<(time?: string | number | Date | undefined) => number>;
    readonly timezoneOffset: TypedPropertyDescriptor<(time?: string | number | Date | undefined) => number>;
};
export declare const getRangeTimestampsContextIntegerPropertyFactory: <T extends number = number>(minInteger: T, maxInteger: T, defaultInteger?: T) => (initialValue?: T | undefined) => Readonly<{
    value: T;
    descriptor: TypedPropertyDescriptor<T>;
}>;
export declare const getRangeTimestampsConfigParameterUnwrapper: (config: RangeTimestampsConfig, context: RangeTimestampsConfigContext) => <T = {}>(value: T) => RangeTimestampsConfigParameterValue<T>;
export declare const isRangeTimestampsConfigWithoutOffsets: (config: RangeTimestampsConfig) => config is {
    from: RangeTimestampsConfigParameter<number | Date>;
    to: RangeTimestampsConfigParameter<number | Date>;
} & {
    [key: string]: any;
    [key: number]: any;
    [key: symbol]: any;
};
export declare const isRangeTimestampsConfigWithFromOffsets: (config: Exclude<RangeTimestampsConfig, RangeTimestampsConfigWithoutOffsets>) => config is RangeTimestampsConfigWithFromOffsets;
export declare const nowTimestamp: ({ now }: RangeTimestampsConfigContext) => number;
export declare const offsetsForNDays: (numberOfDays: number) => RangeTimestampOffsets;
export declare const parseRangeTimestamp: (timestamp: Date | RangeTimestamp) => RangeTimestamp | undefined;
//# sourceMappingURL=utils.d.ts.map