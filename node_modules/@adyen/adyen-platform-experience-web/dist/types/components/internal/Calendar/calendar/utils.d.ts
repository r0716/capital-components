import type { Month, MonthDays, Time, WeekDay } from './types';
export declare const startOfDay: (timestamp: Date | number, timezone?: string, ...args: any[]) => number;
export declare const startOfMonth: (timestamp: Date | number, timezone?: string, ...args: any[]) => number;
export declare const startOfYear: (timestamp: Date | number, timezone?: string, ...args: any[]) => number;
export declare const startOfWeek: (timestamp: Date | number, timezone?: string, ...args: any[]) => number;
export declare const isLeapYear: (year: number) => boolean;
export declare const getMonthDays: (month: Month, year: number, offset?: number) => readonly [MonthDays, Month, number];
export declare const getWeekDayIndex: (weekDay: WeekDay, firstWeekDay?: WeekDay) => WeekDay;
export declare const computeTimestampOffset: (timestamp: number, timezone?: string) => number;
export declare const getDateObjectFromTimestamp: (timestamp?: number) => Date | undefined;
export declare const getTimezoneDateString: (date: number | string | Date, options?: Intl.DateTimeFormatOptions) => string;
export declare const getTimezoneDateParts: (date: number | string | Date, timeZone?: string) => readonly [number, number, number, number, number, number, number];
export declare const getEdgesDistance: (fromTime: Time, toTime: Time, timezone?: string) => number;
export declare const withTimezone: (timezone?: string) => import("../../../../core/Localization/datetime/restamper").RestamperWithTimezone;
//# sourceMappingURL=utils.d.ts.map