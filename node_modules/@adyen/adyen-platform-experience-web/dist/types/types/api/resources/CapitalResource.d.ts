/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
    '/v1/capital/grantOffers/create': {
        /**
         * Create Grant Offer
         * @description This action verifies offer conditions and makes grant ready for user to accept it
         */
        post: operations['createGrantOffer'];
    };
    '/v1/capital/grantOffers/dynamic': {
        /**
         * Get Dynamic Grant Offer
         * @description Get grant offer details for specific parameters
         */
        get: operations['getDynamicGrantOffer'];
    };
    '/v1/capital/grantOffers/dynamic/configuration': {
        /**
         * Get dynamic offers
         * @description Given dynamic offers for the account holder
         */
        get: operations['getDynamicGrantOffersConfiguration'];
    };
    '/v1/capital/grants': {
        /**
         * Get Grants
         * @description Get AccountHolders grants
         */
        get: operations['getGrants'];
    };
    '/v1/capital/grants/{grantOfferId}': {
        /**
         * Request Funds
         * @description Submits grant offer request
         */
        post: operations['requestFunds'];
    };
    '/v1/capital/grants/missingActions/signToS': {
        /**
         * Get SignToS action details
         * @description Add @Operation annotation to provide a description
         */
        get: operations['signToSActionDetails'];
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Amount: {
            /** @description The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes#currency-codes). */
            currency: string;
            /**
             * Format: int64
             * @description The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes#minor-units).
             */
            value: number;
        };
        GrantOfferResponseDTO: {
            /** Format: int32 */
            expectedRepaymentPeriodDays: number;
            feesAmount: components['schemas']['Amount'];
            grantAmount: components['schemas']['Amount'];
            id: string;
            /** Format: int32 */
            maximumRepaymentPeriodDays?: number;
            /** Format: int32 */
            repaymentRate: number;
            thresholdAmount: components['schemas']['Amount'];
            totalAmount: components['schemas']['Amount'];
        };
        CreateGrantOfferRequestDTO: {
            /** Format: int64 */
            amount: number;
            currency: string;
        };
        DynamicOffersResponseDTO: {
            maxAmount: components['schemas']['Amount'];
            minAmount: components['schemas']['Amount'];
            /** Format: int32 */
            step: number;
        };
        GrantResponseDTO: {
            balanceAccountCode: string;
            balanceAccountDescription: string;
            /** Format: int32 */
            expectedRepaymentPeriodDays: number;
            feesAmount: components['schemas']['Amount'];
            grantAmount: components['schemas']['Amount'];
            id: string;
            /** Format: int32 */
            maximumRepaymentPeriodDays?: number;
            missingActions?: components['schemas']['MissingActionDTO'][];
            /** Format: date-time */
            offerExpiresAt?: string;
            remainingFeesAmount: components['schemas']['Amount'];
            remainingGrantAmount: components['schemas']['Amount'];
            remainingTotalAmount: components['schemas']['Amount'];
            repaidFeesAmount: components['schemas']['Amount'];
            repaidGrantAmount: components['schemas']['Amount'];
            repaidTotalAmount: components['schemas']['Amount'];
            /** Format: int64 */
            repaymentPeriodLeft: number;
            /** Format: int32 */
            repaymentRate: number;
            status: components['schemas']['GrantStatus'];
            /** Format: date-time */
            termEndsAt: string;
            thresholdAmount: components['schemas']['Amount'];
            totalAmount: components['schemas']['Amount'];
        };
        /** @enum {string} */
        GrantStatus: 'Pending' | 'Active' | 'Repaid' | 'Failed' | 'WrittenOff' | 'Revoked';
        GrantsResponseDTO: {
            data: components['schemas']['GrantResponseDTO'][];
        };
        MissingActionDTO: {
            type: components['schemas']['MissingActionType'];
        };
        /** @enum {string} */
        MissingActionType: 'signToS';
        MissingTOSActionDetailsResponseDTO: {
            url: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type external = Record<string, never>;
export interface operations {
    /**
     * Create Grant Offer
     * @description This action verifies offer conditions and makes grant ready for user to accept it
     */
    createGrantOffer: {
        requestBody: {
            content: {
                'application/json': components['schemas']['CreateGrantOfferRequestDTO'];
            };
        };
        responses: {
            /** @description OK - the request has succeeded. */
            200: {
                content: {
                    'application/json': components['schemas']['GrantOfferResponseDTO'];
                };
            };
        };
    };
    /**
     * Get Dynamic Grant Offer
     * @description Get grant offer details for specific parameters
     */
    getDynamicGrantOffer: {
        parameters: {
            query: {
                amount: number;
                currency: string;
            };
        };
        responses: {
            /** @description OK - the request has succeeded. */
            200: {
                content: {
                    'application/json': components['schemas']['GrantOfferResponseDTO'];
                };
            };
        };
    };
    /**
     * Get dynamic offers
     * @description Given dynamic offers for the account holder
     */
    getDynamicGrantOffersConfiguration: {
        responses: {
            /** @description OK - the request has succeeded. */
            200: {
                content: {
                    'application/json': components['schemas']['DynamicOffersResponseDTO'];
                };
            };
        };
    };
    /**
     * Get Grants
     * @description Get AccountHolders grants
     */
    getGrants: {
        responses: {
            /** @description OK - the request has succeeded. */
            200: {
                content: {
                    'application/json': components['schemas']['GrantsResponseDTO'];
                };
            };
        };
    };
    /**
     * Request Funds
     * @description Submits grant offer request
     */
    requestFunds: {
        parameters: {
            path: {
                grantOfferId: string;
            };
        };
        responses: {
            /** @description OK - the request has succeeded. */
            200: {
                content: {
                    'application/json': components['schemas']['GrantResponseDTO'];
                };
            };
        };
    };
    /**
     * Get SignToS action details
     * @description Add @Operation annotation to provide a description
     */
    signToSActionDetails: {
        parameters: {
            query: {
                redirectUrl: string;
                locale: string;
            };
        };
        responses: {
            /** @description OK - the request has succeeded. */
            200: {
                content: {
                    'application/json': components['schemas']['MissingTOSActionDetailsResponseDTO'];
                };
            };
        };
    };
}
//# sourceMappingURL=CapitalResource.d.ts.map