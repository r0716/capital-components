import { useFetch as f } from "./useFetch.js";
import { useMemo as o } from "../external/preact/hooks/dist/hooks.module.js";
import { useAuthContext as g } from "../core/Auth/context.js";
import { EMPTY_OBJECT as p } from "../utils/value/constants.js";
const B = (r, i) => {
  const { getBalanceAccounts: s } = g().endpoints, { data: e, isFetching: n, error: m } = f(
    o(
      () => ({
        fetchOptions: { enabled: !!s && (i ?? !0), keepPrevData: !0 },
        queryFn: async () => s == null ? void 0 : s(p)
      }),
      [s]
    )
  ), t = o(
    () => e == null ? void 0 : e.data.filter((u) => r ? u.id === r : !0),
    [e == null ? void 0 : e.data, r]
  ), h = o(
    () => !!r && !!(e != null && e.data.length) && (t == null ? void 0 : t.length) === 0,
    [t == null ? void 0 : t.length, e == null ? void 0 : e.data.length, r]
  );
  return { balanceAccounts: t, isBalanceAccountIdWrong: h, isFetching: n, error: m };
}, M = B;
export {
  M as default
};
