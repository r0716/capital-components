import { useState as o, useRef as u, useCallback as f, useEffect as i } from "../external/preact/hooks/dist/hooks.module.js";
const l = (e = 1e3, a = !1) => {
  const [r, s] = o(a), t = u(), n = u(), c = f(() => {
    r || (n.current = setTimeout(() => {
      t.current = requestAnimationFrame(() => s(!1));
    }, e), s(!0));
  }, [r, e]);
  return i(() => () => {
    cancelAnimationFrame(t.current), clearTimeout(n.current), t.current = n.current = null;
  }, [e]), { freeze: c, frozen: r };
}, d = l;
export {
  d as default,
  l as useFreezePeriod
};
