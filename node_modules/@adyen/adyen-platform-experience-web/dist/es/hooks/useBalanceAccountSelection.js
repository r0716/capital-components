import { useState as p, useCallback as l, useMemo as m } from "../external/preact/hooks/dist/hooks.module.js";
import { capitalize as x } from "../utils/value/string.js";
const I = (e) => {
  const [n, t] = p(0), r = l(() => t(0), [t]), s = m(() => e == null ? void 0 : e[n], [e, n]), B = m(
    () => e && e.length > 1 ? Object.freeze(e.map(({ description: o, id: i }) => ({ id: i, name: x(o) }))) : void 0,
    [e]
  ), S = l(
    ({ target: o }) => {
      const i = o == null ? void 0 : o.value, d = e == null ? void 0 : e.findIndex(({ id: f }) => f === i);
      d >= 0 && t(d);
    },
    [e, t]
  );
  return { activeBalanceAccount: s, balanceAccountSelectionOptions: B, onBalanceAccountSelection: S, resetBalanceAccountSelection: r };
}, c = I;
export {
  c as default
};
