import { useCallback as e } from "../../external/preact/hooks/dist/hooks.module.js";
import i from "../useReflex.js";
import { ALREADY_RESOLVED_PROMISE as m } from "../../utils/async/constants.js";
const n = (o) => {
  const f = e(
    (t, s) => {
      s instanceof Element && s.setAttribute("tabindex", "-1"), t instanceof Element && (t.setAttribute("tabindex", "0"), m.then(() => t == null ? void 0 : t.focus()));
    },
    []
  );
  return i(
    e(
      (t, s) => {
        try {
          o == null || o(t, s);
        } finally {
          f(t, s);
        }
      },
      [o]
    )
  );
}, A = n;
export {
  A as default
};
