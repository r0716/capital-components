import { jsx as o } from "../../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import { TableCells as d } from "./TableCells.js";
import h from "../../../../core/Context/useCoreContext.js";
import { useCallback as b } from "../../../../external/preact/hooks/dist/hooks.module.js";
import { useInteractiveDataGrid as F } from "../hooks/useInteractiveDataGrid.js";
import { Fragment as I } from "../../../../external/preact/dist/preact.module.js";
import { noop as l } from "../../../../utils/common.js";
const j = ({
  data: e,
  columns: c,
  onRowClick: s,
  customCells: n,
  onRowHover: a
}) => {
  const y = b(
    (r) => () => s == null ? void 0 : s.callback(s != null && s.retrievedField ? r[s.retrievedField] : r),
    [s]
  ), { i18n: t } = h(), { currentIndex: f, listeners: u, ref: g } = F({ totalRows: (e == null ? void 0 : e.length) ?? 0 });
  return /* @__PURE__ */ o(I, { children: e == null ? void 0 : e.map((r, p) => /* @__PURE__ */ o(
    "div",
    {
      role: "row",
      tabIndex: 0,
      onMouseEnter: t.has(`tooltip.${r == null ? void 0 : r.category}`) && a ? () => a(p) : l,
      onFocus: t.has(`tooltip.${r == null ? void 0 : r.category}`) && a ? () => a(p) : l,
      onMouseLeave: t.has(`tooltip.${r == null ? void 0 : r.category}`) && a ? () => a() : l,
      onBlur: t.has(`tooltip.${r == null ? void 0 : r.category}`) && a ? () => a() : l,
      ref: g,
      "aria-selected": p === f,
      "data-index": p,
      className: "adyen-pe-data-grid__row adyen-pe-data-grid__row--clickable",
      onClick: y(r),
      onFocusCapture: u.onFocusCapture(p),
      onKeyDownCapture: u.onKeyDownCapture,
      children: /* @__PURE__ */ o(d, { columns: c, customCells: n, item: r, rowIndex: p })
    },
    r
  )) });
};
export {
  j as InteractiveBody
};
