import { jsx as a } from "../../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import o from "../DataGridCell.js";
import u from "./Icon.js";
import { Fragment as v } from "../../../../external/preact/dist/preact.module.js";
const b = (n) => !!n && typeof n == "object" && "value" in n, m = ({
  columns: n,
  customCells: d,
  item: l,
  rowIndex: c
}) => /* @__PURE__ */ a(v, { children: n.map(({ key: r, position: t }) => {
  if (d != null && d[r])
    return /* @__PURE__ */ a(o, { "aria-labelledby": String(r), column: r, position: t, children: /* @__PURE__ */ a("div", {
      style: { width: "min-content" },
      // TODO create safeguard to remove "as any" assertion
      children: d[r]({
        key: r,
        value: l[r],
        item: l,
        rowIndex: c
      })
    }) }, r);
  const { icon: i, value: e } = b(l[r]) ? l[r] : { value: l[r], icon: void 0 };
  return /* @__PURE__ */ a(o, { "aria-labelledby": String(r), column: r, position: t, children: /* @__PURE__ */ a("div", { className: "adyen-pe-data-grid__cell-value", children: [
    (i == null ? void 0 : i.url) && /* @__PURE__ */ a(u, { ...i }),
    /* @__PURE__ */ a("div", { children: e })
  ] }) }, r);
}) });
export {
  m as TableCells,
  b as _isCustomDataObject
};
