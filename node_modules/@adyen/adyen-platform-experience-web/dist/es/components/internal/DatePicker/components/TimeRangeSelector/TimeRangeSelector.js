import { jsx as C } from "../../../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import { useMemo as j, useCallback as w, useRef as h, useEffect as i } from "../../../../../external/preact/hooks/dist/hooks.module.js";
import { useTimeRangeSelection as x } from "./useTimeRangeSelection.js";
import D from "../../../FormFields/Select/Select.js";
const T = ({
  calendarRef: t,
  onTimeRangeSelected: o,
  timestamp: s,
  ...O
}) => {
  const { customSelection: f, from: u, onSelection: l, options: m, selectedOption: r, to: c } = x(O), S = j(() => Object.freeze(m.map((e) => ({ id: e, name: e }))), [m]), b = w(({ target: e }) => l(e == null ? void 0 : e.value), [l]), n = h(!0), p = h(s);
  return i(() => {
    t != null && t.current && u && c && (n.current = !0, t.current.from = new Date(u), t.current.to = new Date(c));
  }, [t, u, c]), i(() => {
    p.current !== s && (p.current = s, n.current ? n.current = !1 : f());
  }, [f, s]), i(() => {
    r && (o == null || o(r));
  }, [r, o]), /* @__PURE__ */ C(
    D,
    {
      setToTargetWidth: !0,
      items: S,
      filterable: !1,
      multiSelect: !1,
      onChange: b,
      selected: r
    }
  );
}, y = T;
export {
  y as default
};
