import { jsx as c } from "../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import { ARIA_ERROR_SUFFIX as u } from "../../../core/Errors/constants.js";
import _ from "classnames";
import { forwardRef as q } from "../../../external/preact/compat/dist/compat.module.js";
import { useCallback as r } from "../../../external/preact/hooks/dist/hooks.module.js";
import "./FormFields.scss.js";
import { Fragment as P } from "../../../external/preact/dist/preact.module.js";
import { hasOwnProperty as k } from "../../../utils/struct/property.js";
function h({ onInput: i, onKeyUp: d, trimOnBlur: l, onBlurHandler: e, onBlur: t, onFocusHandler: s, errorMessage: f, ...p }, v) {
  const { autoCorrect: A, classNameModifiers: m, isInvalid: n, isValid: C, readonly: I = !1, spellCheck: O, type: y, uniqueId: o, isCollatingErrors: $, disabled: g } = p;
  k(p, "onChange") && console.error("Error: Form fields that rely on InputBase may not have an onChange property");
  const b = r(
    (a) => {
      i == null || i(a);
    },
    [i]
  ), N = r(
    (a) => {
      d && d(a);
    },
    [d]
  ), R = r(
    (a) => {
      e == null || e(a), l && (a.target.value = a.target.value.trim()), t == null || t(a);
    },
    [t, e, l]
  ), w = r(
    (a) => {
      s == null || s(a);
    },
    [s]
  ), x = _(
    "adyen-pe-input",
    [`adyen-pe-input--${y}`],
    p.className,
    {
      "adyen-pe-input--invalid": n,
      "adyen-pe-input--valid": C
    },
    m == null ? void 0 : m.map((a) => `adyen-pe-input--${a}`)
  ), { classNameModifiers: V, uniqueId: j, isInvalid: F, isValid: S, isCollatingErrors: U, ...E } = p;
  return /* @__PURE__ */ c(P, { children: [
    /* @__PURE__ */ c(
      "input",
      {
        id: o,
        ...E,
        type: y,
        className: x,
        readOnly: I,
        "aria-describedby": $ ? void 0 : `${o}${u}`,
        "aria-invalid": n,
        onInput: b,
        onBlurCapture: R,
        onFocus: w,
        onKeyUp: N,
        disabled: g,
        ref: v
      }
    ),
    n && f && /* @__PURE__ */ c("span", { className: "adyen-pe-input__invalid-value", id: `${o}${u}`, children: f })
  ] });
}
h.defaultProps = {
  type: "text",
  classNameModifiers: [],
  onInput: () => {
  }
};
const Q = q(h);
export {
  Q as default
};
