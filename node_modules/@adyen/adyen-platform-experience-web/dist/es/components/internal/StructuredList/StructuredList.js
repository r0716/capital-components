import { jsx as t } from "../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import a from "classnames";
import { useMemo as C } from "../../../external/preact/hooks/dist/hooks.module.js";
import f from "../../../core/Context/useCoreContext.js";
import { TypographyVariant as l } from "../Typography/types.js";
import m from "../Typography/Typography.js";
import { SL_GRID_CLASS as _, SL_BASE_CLASS as T, SL_ITEM_CLASS as h, SL_ITEM_WITH_HIGHLIGHT_CLASS as E, SL_LABEL_CLASS as I, SL_CONTENT_CLASS as v } from "./constants.js";
import "./StructuredList.scss.js";
import { useStructuredListItems as y } from "./useStructuredListItem.js";
const N = "6-6";
function G({
  items: e,
  highlightable: c,
  renderValue: L,
  renderLabel: s,
  layout: S = N,
  grid: p = !0,
  classNames: n
}) {
  const [u, d] = C(() => S.split("-").map((r) => `${_}--width-${r}-of-12`), [S]), A = y(e), { i18n: o } = f();
  return /* @__PURE__ */ t("div", { "aria-label": o.get("structuredList"), className: a(T, n), children: A.map((r, i) => /* @__PURE__ */ t(
    "dl",
    {
      className: a(h, {
        [E]: c,
        [_]: p
      }),
      children: [
        /* @__PURE__ */ t("dt", { className: a(I, u), children: s ? s(r.label, e[i].key) : /* @__PURE__ */ t(m, { variant: l.BODY, children: r.label }) }),
        /* @__PURE__ */ t("dd", { "aria-label": `${o.get(r.key)} ${o.get("value")}`, className: a(v, d), children: L ? L(r.value, r.key) : /* @__PURE__ */ t(m, { variant: l.BODY, children: r.value }) })
      ]
    },
    `${i}_${r.id || "0"}`
  )) });
}
export {
  G as default
};
