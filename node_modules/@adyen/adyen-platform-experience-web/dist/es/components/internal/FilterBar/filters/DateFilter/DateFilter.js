import { jsx as d } from "../../../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import I from "./DateFilterCore.js";
import { FilterParam as e } from "../../../../types.js";
import { useMemo as C, useState as O, useCallback as P } from "../../../../../external/preact/hooks/dist/hooks.module.js";
import _ from "../../../../../core/Context/useCoreContext.js";
import { DateRangeFilterParam as l } from "./types.js";
import { EMPTY_OBJECT as A } from "../../../../../utils/value/constants.js";
const S = ({
  timezone: T,
  canResetFilters: s,
  defaultParams: r,
  filters: i,
  nowTimestamp: m,
  refreshNowTimestamp: c,
  sinceDate: u,
  untilDate: R,
  updateFilters: a
}) => {
  const { i18n: o } = _(), t = C(() => o.get(r.current.defaultTimeRange), [o]), [D, E] = O(t), f = P(
    (g = A) => {
      for (const [p, n] of Object.entries(g)) {
        switch (p) {
          case "selectedPresetOption":
            E(n || t);
            break;
          case l.FROM:
            a({
              [e.CREATED_SINCE]: n || r.current.defaultFilterParams[e.CREATED_SINCE]
            });
            break;
          case l.TO:
            a({
              [e.CREATED_UNTIL]: n || r.current.defaultFilterParams[e.CREATED_UNTIL]
            });
            break;
          default:
            return;
        }
        c();
      }
    },
    [t, c, a]
  );
  return C(() => !s && E(t), [s, t]), /* @__PURE__ */ d(
    I,
    {
      label: o.get("dateRange"),
      name: e.CREATED_SINCE,
      sinceDate: u,
      untilDate: R ?? new Date(m).toString(),
      from: i[e.CREATED_SINCE],
      to: i[e.CREATED_UNTIL],
      selectedPresetOption: D,
      timeRangePresetOptions: r.current.timeRangeOptions,
      timezone: T,
      onChange: f,
      showTimezoneInfo: !0,
      now: m
    }
  );
}, M = S;
export {
  M as default
};
