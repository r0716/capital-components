import { jsx as n } from "../../../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import g from "../../../FormFields/InputBase.js";
import "./AmountFilter.scss.js";
import { useState as p, useCallback as x, useEffect as T, useMemo as h } from "../../../../../external/preact/hooks/dist/hooks.module.js";
import N from "../../../../../core/Context/useCoreContext.js";
import { AMOUNT_MULTIPLIER as b } from "./constants.js";
import { isUndefined as m } from "../../../../../utils/value/is.js";
import { CommitAction as F } from "../../../../../hooks/useCommitAction/types.js";
const S = ({
  onChange: i,
  editAction: o,
  onValueUpdated: u,
  selectedCurrencies: y,
  availableCurrencies: I,
  value: M,
  ...l
}) => {
  const { i18n: r } = N(), [t, c] = p(
    m(l.minAmount) ? void 0 : parseFloat(l.minAmount) / b
  ), [a, d] = p(
    m(l.maxAmount) ? void 0 : parseFloat(l.maxAmount) / b
  ), v = x(() => {
    i({ minAmount: t, maxAmount: a });
  }, [a, t, i]), f = x(() => {
    i({ minAmount: void 0, maxAmount: void 0 }), d(void 0), c(void 0);
  }, [i]);
  T(() => {
    o === F.APPLY && v(), o === F.CLEAR && f();
  }, [v, f, o]);
  const A = h(() => ({ minAmount: Number(t), maxAmount: Number(a) }), [a, t]);
  return T(() => {
    const { maxAmount: e, minAmount: s } = A;
    m(e) && m(s) || s > e ? u(null) : u(`${s}-${e}`);
  }, [A, u]), /* @__PURE__ */ n("div", { className: "adyen-pe-range-selection-filter", children: [
    /* @__PURE__ */ n("div", { className: "adyen-pe-range-selection-filter__input", children: [
      /* @__PURE__ */ n("label", { htmlFor: "minValue", children: `${r.get("from")}:` }),
      /* @__PURE__ */ n(
        g,
        {
          "data-testid": "minValueFilter",
          lang: r.locale,
          name: "minValue",
          type: "number",
          value: t,
          onInput: (e) => {
            e.currentTarget && c(e.currentTarget.value !== "" ? e.currentTarget.value : void 0);
          },
          min: 0,
          isInvalid: t ? t < 0 : !1,
          errorMessage: r.get("noNegativeNumbersAllowed")
        }
      )
    ] }),
    /* @__PURE__ */ n("div", { className: "adyen-pe-range-selection-filter__input", children: [
      /* @__PURE__ */ n("label", { htmlFor: "maxValue", children: `${r.get("to")}:` }),
      /* @__PURE__ */ n(
        g,
        {
          "data-testid": "maxValueFilter",
          lang: r.locale,
          name: "maxValue",
          type: "number",
          value: a,
          onInput: (e) => {
            e.currentTarget && d(e.currentTarget.value !== "" ? e.currentTarget.value : void 0);
          },
          min: t,
          isInvalid: !m(a) && !m(t) && a < t,
          errorMessage: r.get("toValueShouldBeGreaterThanTheFromValue")
        }
      )
    ] })
  ] });
};
export {
  S as RangeSelection
};
