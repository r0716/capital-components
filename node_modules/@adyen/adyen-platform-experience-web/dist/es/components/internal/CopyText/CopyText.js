import { jsx as t } from "../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import a from "classnames";
import { useState as y, useCallback as p } from "../../../external/preact/hooks/dist/hooks.module.js";
import f from "../../../core/Context/useCoreContext.js";
import { ButtonVariant as u } from "../Button/types.js";
import { Tooltip as s } from "../Tooltip/Tooltip.js";
import "./CopyText.scss.js";
import h from "../Button/Button.js";
import L from "../Icon/Icon.js";
const k = ({
  textToCopy: o,
  isHovered: l,
  buttonLabel: i,
  showCopyTextTooltip: m = !0,
  type: e = "Link"
}) => {
  const { i18n: n } = f(), [d, c] = y(n.get("copy")), _ = p(async () => {
    if (o)
      try {
        await navigator.clipboard.writeText(o), c(n.get("copied"));
      } catch (x) {
        console.log(x);
      }
  }, [n, o]), r = p(() => {
    c(n.get("copy"));
  }, [n]);
  return /* @__PURE__ */ t(
    "span",
    {
      className: a("adyen-pe-copy-text__container", {
        "adyen-pe-copy-text__container--information": e === "Link"
      }),
      children: [
        m ? /* @__PURE__ */ t(s, { content: o, isContainerHovered: l, children: /* @__PURE__ */ t(
          "span",
          {
            className: a({
              "adyen-pe-copy-text__label": e !== "Default",
              "adyen-pe-copy-text__information": e === "Link",
              "adyen-pe-copy-text__text": e === "Text"
            }),
            children: i || o
          }
        ) }) : /* @__PURE__ */ t(
          "span",
          {
            className: a({
              "adyen-pe-copy-text__label": e !== "Default",
              "adyen-pe-copy-text__information": e === "Link",
              "adyen-pe-copy-text__text": e === "Text"
            }),
            children: i || o
          }
        ),
        /* @__PURE__ */ t(s, { content: d, children: /* @__PURE__ */ t(
          h,
          {
            variant: u.TERTIARY,
            className: "adyen-pe-copy-text",
            onClick: _,
            onBlur: r,
            onMouseLeaveCapture: r,
            children: /* @__PURE__ */ t(
              "div",
              {
                className: a("adyen-pe-copy-text__icon", {
                  "adyen-pe-copy-text__icon--information": e === "Link"
                }),
                children: /* @__PURE__ */ t(L, { name: "copy" })
              }
            )
          }
        ) })
      ]
    }
  );
}, I = k;
export {
  I as default
};
