import { jsx as r } from "../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import { useResponsiveViewport as b, mediaQueries as v } from "../../../hooks/useResponsiveViewport.js";
import T from "../Popover/Popover.js";
import { PopoverContainerVariant as V } from "../Popover/types.js";
import { useTooltipListeners as x } from "./useTooltipListeners.js";
import { TypographyVariant as I } from "../Typography/types.js";
import N from "../Typography/Typography.js";
import P from "../../../hooks/element/useUniqueIdentifier.js";
import u from "classnames";
import { Fragment as p, cloneElement as E } from "../../../external/preact/dist/preact.module.js";
import "./Tooltip.scss.js";
const O = (t) => typeof t == "string", S = ({ content: t, children: o, triggerRef: g, showTooltip: a, position: y, isContainerHovered: s = !1 }) => {
  var i, f, n;
  const e = P(), _ = b(v.down.sm), { isVisible: m, listeners: l } = x();
  return _ ? /* @__PURE__ */ r(p, { children: o }) : /* @__PURE__ */ r(p, { children: [
    o ? E(o, {
      ...o == null ? void 0 : o.props,
      role: "button",
      tabIndex: -1,
      ref: e,
      className: (i = o == null ? void 0 : o.props) != null && i.className ? u(`${(f = o == null ? void 0 : o.props) == null ? void 0 : f.className} adyen-pe__tooltip-target`, {
        " adyen-pe__tooltip-target--hovered": s
      }) : u("adyen-pe__tooltip-target", { "adyen-pe__tooltip-target--hovered": s }),
      ...l,
      "aria-describedby": `tooltip-${(n = e.current) == null ? void 0 : n.id}`
    }) : null,
    (m || a) && /* @__PURE__ */ r(
      T,
      {
        variant: V.TOOLTIP,
        targetElement: g ?? e,
        position: y,
        open: m || a,
        children: /* @__PURE__ */ r(p, { children: t && O(t) ? /* @__PURE__ */ r(N, { variant: I.CAPTION, children: t }) : { content: t } })
      }
    )
  ] });
};
export {
  S as Tooltip
};
