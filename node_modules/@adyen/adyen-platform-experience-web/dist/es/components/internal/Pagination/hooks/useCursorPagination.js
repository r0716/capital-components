import { useMemo as m } from "../../../../external/preact/hooks/dist/hooks.module.js";
import d from "./usePagination.js";
import { isString as i, isUndefined as f } from "../../../../utils/value/is.js";
const C = (e) => i(e.next), h = (e) => i(e.prev), l = (e, u) => {
  const c = m(() => {
    const o = [], P = () => o.length, a = () => {
      o.length = 0;
    }, g = (t) => ({ cursor: o[t - 1] }), r = (t, s) => {
      const n = o[s - 1];
      (s === 1 || s === (o.length || 1) + 1) && f(n) && (o[s - 1] = t ? decodeURIComponent(t) : void 0);
    };
    return { getPageCount: P, getPageParams: g, resetPageCount: a, updatePagination: (t, s, n) => {
      C(n) && r(n.next, t + 1), h(n) && r(n.prev, t - 1);
    } };
  }, []);
  return d(c, e, u);
}, U = l;
export {
  U as default,
  C as hasNextPage,
  h as hasPrevPage
};
