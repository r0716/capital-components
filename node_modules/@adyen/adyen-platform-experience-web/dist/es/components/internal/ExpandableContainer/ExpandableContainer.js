import { jsx as o } from "../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import { useState as d, useCallback as l } from "../../../external/preact/hooks/dist/hooks.module.js";
import "./ExpandableContainer.scss.js";
import p from "../../../core/Context/useCoreContext.js";
import { EXPANDABLE_CONTAINER_CLASS_NAMES as t } from "./constants.js";
import u from "classnames";
import f from "../Button/Button.js";
import { ButtonVariant as x } from "../Button/types.js";
import { uuid as C } from "../../../utils/random/uuid.js";
import I from "../Icon/Icon.js";
const R = ({ className: n, children: r }) => {
  const { i18n: i } = p(), [e, s] = d(!1), a = C(), c = l(() => {
    s((m) => !m);
  }, []);
  return /* @__PURE__ */ o("div", { className: u(t.base, n), "data-testid": "expandable-container", children: [
    e && /* @__PURE__ */ o("div", { id: a, className: t.content, children: r }),
    /* @__PURE__ */ o(
      f,
      {
        variant: x.TERTIARY_WITH_BACKGROUND,
        condensed: !0,
        fullWidth: !0,
        onClick: c,
        "aria-controls": a,
        "aria-expanded": e,
        "aria-label": i.get(e ? "expandableCard.collapse" : "expandableCard.expand"),
        children: /* @__PURE__ */ o(I, { name: e ? "chevron-up" : "chevron-down", className: t.toggleButtonIcon })
      }
    )
  ] });
};
export {
  R as ExpandableContainer
};
