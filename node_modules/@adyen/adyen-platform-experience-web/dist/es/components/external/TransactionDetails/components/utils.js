import { RefundType as d } from "../context/types.js";
import { parsePaymentMethodType as p } from "../../TransactionsOverview/components/utils.js";
import { EMPTY_OBJECT as r } from "../../../../utils/value/constants.js";
const f = (e) => {
  switch (e == null ? void 0 : e.status) {
    case "Booked":
      return "default";
    case "Reversed":
      return "error";
    default:
      return "pending";
  }
}, o = (e) => e != null && e.paymentMethod ? e.paymentMethod.type : e != null && e.bankAccount ? "bankTransfer" : null, h = (e) => {
  var u;
  return e != null && e.paymentMethod ? p(e.paymentMethod, "detail") : (u = e == null ? void 0 : e.bankAccount) == null ? void 0 : u.accountNumberLastFourDigits;
}, M = (e) => {
  if (e.category === "Refund") {
    const { refundType: u } = e.refundMetadata ?? r;
    switch (u) {
      case d.FULL:
        return d.FULL;
      case d.PARTIAL:
        return d.PARTIAL;
    }
  }
};
export {
  f as getAmountStyleForTransaction,
  h as getDisplayablePaymentMethodForTransaction,
  o as getPaymentMethodTypeForTransaction,
  M as getRefundTypeForTransaction
};
