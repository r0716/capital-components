import { jsx as e } from "../../../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import { memo as N } from "../../../../../external/preact/compat/dist/compat.module.js";
import { createContext as O, Fragment as h } from "../../../../../external/preact/dist/preact.module.js";
import { useMemo as a, useCallback as R, useEffect as w, useContext as j } from "../../../../../external/preact/hooks/dist/hooks.module.js";
import k from "../../../../../core/Context/useCoreContext.js";
import { ButtonVariant as y } from "../../../../internal/Button/types.js";
import { ActiveView as B } from "../types.js";
import A from "../../../../internal/Icon/Icon.js";
import { EMPTY_ARRAY as _, EMPTY_OBJECT as E } from "../../../../../utils/value/constants.js";
import { noop as D } from "../../../../../utils/common.js";
const P = O({
  availableItems: _,
  primaryAction: D,
  secondaryAction: D,
  transaction: E,
  extraFields: E
}), Q = N(
  ({
    children: Y,
    lineItems: F,
    refundAvailable: n,
    refundDisabled: l,
    setActiveView: f,
    setPrimaryAction: u,
    setSecondaryAction: p,
    transaction: i,
    transactionNavigator: I,
    extraFields: M
  }) => {
    const { i18n: r } = k(), { currentTransaction: v, canNavigateBackward: T, canNavigateForward: g, backward: C, forward: b } = I, x = a(() => ({ title: r.get("refundAction") }), [r]), o = a(() => !n || l, [n, l]), s = R(
      () => void (!o && f(B.REFUND)),
      [o, f]
    ), t = a(() => {
      if (v === i.id) {
        if (T)
          return 2;
        if (g)
          return 1;
      }
    }, [T, g, v, i]), c = R(() => {
      switch (t) {
        case 2:
          return void C();
        case 1:
          return void b();
      }
    }, [t, C, b]), d = a(() => {
      switch (t) {
        case 2:
          return {
            title: r.get("refund.returnToRefund"),
            renderTitle: (m) => /* @__PURE__ */ e(h, { children: [
              /* @__PURE__ */ e(A, { style: { transform: "scaleX(-1)" }, name: "angle-right" }),
              /* @__PURE__ */ e("span", { children: m })
            ] })
          };
        case 1:
          return {
            title: r.get("refund.goToPayment"),
            renderTitle: (m) => /* @__PURE__ */ e(h, { children: [
              /* @__PURE__ */ e(A, { name: "angle-right" }),
              /* @__PURE__ */ e("span", { children: m })
            ] })
          };
      }
    }, [t, r]);
    return w(() => {
      u(
        n ? Object.freeze({
          disabled: o,
          event: s,
          variant: y.PRIMARY,
          ...x
        }) : void 0
      );
    }, [s, n, o, x, u]), w(() => {
      p(
        t && d ? Object.freeze({
          disabled: !1,
          event: c,
          variant: y.SECONDARY,
          ...d
        }) : void 0
      );
    }, [t, c, d, p]), /* @__PURE__ */ e(P.Provider, { value: { availableItems: F, primaryAction: s, secondaryAction: c, transaction: i, extraFields: M }, children: Y });
  }
), S = () => j(P);
export {
  Q as TransactionDetailsProvider,
  S as default,
  S as useTransactionDetailsContext
};
