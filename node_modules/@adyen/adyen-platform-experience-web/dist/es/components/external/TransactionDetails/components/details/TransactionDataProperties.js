import { jsx as i } from "../../../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import { useMemo as v } from "../../../../../external/preact/hooks/dist/hooks.module.js";
import P from "../../../../internal/CopyText/CopyText.js";
import { TX_DETAILS_RESERVED_FIELDS_SET as g, TX_DATA_LIST as x, TX_DATA_LABEL as E } from "../constants.js";
import { _isCustomDataObject as k } from "../../../../internal/DataGrid/components/TableCells.js";
import C from "../../../../../core/Context/useCoreContext.js";
import { useTransactionDetailsContext as I } from "../../context/details/context.js";
import L from "../../../../internal/StructuredList/StructuredList.js";
import { isNullish as S } from "../../../../../utils/value/is.js";
const h = () => {
  const { i18n: s } = C(), { transaction: u, extraFields: l } = I();
  return v(() => {
    const { balanceAccount: a, category: p, id: y, paymentPspReference: c, refundMetadata: e } = u, r = p === "Refund", t = null, f = (n) => {
      if (S(n))
        return null;
      const { value: o, currency: _ } = n;
      return s.amount(o, _);
    }, m = f(u.deductedAmount), d = f(u.originalAmount), R = r ? "refund.refundFee" : "refund.fee", T = r ? "refund.originalPayment" : "refund.originalAmount", A = r ? "refund.paymentPspReference" : "refund.pspReference", D = [
      // amounts
      d ? { key: T, value: d } : t,
      m ? { key: R, value: m } : t,
      // balance account
      a != null && a.description ? { key: "account", value: a.description } : t,
      // custom data
      ...Object.entries(l || {}).filter(([n]) => !g.has(n)).map(([n, o]) => ({
        key: n,
        value: k(o) ? o.value : o
      })) || {},
      // refund reason
      r && (e != null && e.refundReason) ? {
        key: "refundReason",
        value: s.has(`refundReason.${e.refundReason}`) ? s.get(`refundReason.${e.refundReason}`) : e.refundReason
      } : t,
      // reference id
      { key: "referenceID", value: /* @__PURE__ */ i(P, { type: "Default", textToCopy: y, showCopyTextTooltip: !1 }) },
      r && (e != null && e.refundPspReference) ? { key: "refund.refundPspReference", value: e.refundPspReference } : t,
      // psp reference
      c ? { key: A, value: c } : t
    ].filter(Boolean);
    return /* @__PURE__ */ i(
      L,
      {
        classNames: x,
        items: D,
        layout: "5-7",
        renderLabel: (n) => /* @__PURE__ */ i("div", { className: E, children: n })
      }
    );
  }, [s, u]);
}, w = h;
export {
  w as default
};
