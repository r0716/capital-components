import { jsx as t } from "../../../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import { useState as o, useCallback as i, useMemo as b } from "../../../../../external/preact/hooks/dist/hooks.module.js";
import { CAPITAL_OFFER_CLASS_NAMES as g } from "./constants.js";
import { CapitalOfferSelection as q } from "../CapitalOfferSelection/CapitalOfferSelection.js";
import { useFetch as v } from "../../../../../hooks/useFetch.js";
import { CapitalOfferSummary as T } from "../CapitalOfferSummary/CapitalOfferSummary.js";
import { CapitalHeader as _ } from "../../../../internal/CapitalHeader/CapitalHeader.js";
import { useAuthContext as M } from "../../../../../core/Auth/context.js";
import { EMPTY_OBJECT as k } from "../../../../../utils/value/constants.js";
const I = ({
  externalDynamicOffersConfig: m,
  hideTitle: l,
  onContactSupport: a,
  onFundsRequest: p,
  onOfferDismiss: O,
  onOfferSelect: f
}) => {
  const { getDynamicGrantOffersConfiguration: r } = M().endpoints, [S, c] = o(!1), y = i((e) => {
    c(!e);
  }, []), { data: d, error: C } = v({
    fetchOptions: {
      enabled: !m && !!r,
      onSuccess: y
    },
    queryFn: i(async () => r == null ? void 0 : r(k), [r])
  }), A = m || d, [s, u] = o(), [h, E] = o(), F = i(
    (e) => {
      f ? f(e) : (E(e == null ? void 0 : e.grantAmount.value), u(e));
    },
    [f]
  ), n = b(() => s ? "OfferSummary" : "OfferSelection", [s]);
  return /* @__PURE__ */ t("div", { className: g.base, children: [
    /* @__PURE__ */ t(
      _,
      {
        hasDivider: !0,
        hideTitle: l,
        titleKey: n === "OfferSummary" ? "capital.businessFinancingSummary" : "capital.businessFinancingOffer"
      }
    ),
    n === "OfferSelection" && /* @__PURE__ */ t(
      q,
      {
        requestedAmount: h,
        dynamicOffersConfig: A,
        dynamicOffersConfigError: C,
        onOfferDismiss: O,
        onOfferSelect: F,
        emptyGrantOffer: S,
        onContactSupport: a
      }
    ),
    n === "OfferSummary" && /* @__PURE__ */ t(
      T,
      {
        grantOffer: s,
        onBack: () => u(void 0),
        onFundsRequest: p,
        onContactSupport: a
      }
    )
  ] });
};
export {
  I as CapitalOffer
};
