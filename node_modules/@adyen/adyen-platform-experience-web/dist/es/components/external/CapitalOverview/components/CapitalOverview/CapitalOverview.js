import { jsx as t } from "../../../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import { useCallback as h, useState as N, useMemo as l } from "../../../../../external/preact/hooks/dist/hooks.module.js";
import { CAPITAL_OVERVIEW_CLASS_NAMES as u } from "../../constants.js";
import { useFetch as C } from "../../../../../hooks/useFetch.js";
import "./CapitalOverview.scss.js";
import w from "../Unqualified.js";
import { PreQualified as M } from "../PreQualified/PreQualified.js";
import { GrantList as O } from "../GrantList/GrantList.js";
import { ErrorMessageDisplay as P } from "../../../../internal/ErrorMessageDisplay/ErrorMessageDisplay.js";
import { getCapitalErrorMessage as S } from "../../../../utils/capital/getCapitalErrorMessage.js";
import { useAuthContext as _ } from "../../../../../core/Auth/context.js";
import { CapitalHeader as Q } from "../../../../internal/CapitalHeader/CapitalHeader.js";
import { EMPTY_OBJECT as E } from "../../../../../utils/value/constants.js";
const W = ({
  hideTitle: m,
  onContactSupport: p,
  onFundsRequest: c,
  onOfferDismiss: g,
  onOfferOptionsRequest: b,
  skipPreQualifiedIntro: f
}) => {
  var F;
  const { getGrants: s, getDynamicGrantOffersConfiguration: o } = _().endpoints, a = C({
    fetchOptions: { enabled: !!s },
    queryFn: h(async () => s == null ? void 0 : s(E), [])
  }), n = C({
    fetchOptions: { enabled: !!o },
    queryFn: h(async () => o == null ? void 0 : o(E), [])
  }), e = n.data, [d, y] = N(), r = l(
    () => {
      var i, v;
      return d ? [d, ...((i = a.data) == null ? void 0 : i.data) || []] : (v = a.data) == null ? void 0 : v.data;
    },
    [(F = a.data) == null ? void 0 : F.data, d]
  ), A = h(
    (i) => {
      c ? c(i) : y(i);
    },
    [c]
  ), q = l(() => !!(n.error && a.error || n.error && !(r != null && r.length)), [n.error, r == null ? void 0 : r.length, a.error]), G = l(() => q ? "Error" : !s && !o || !e && !r || a.isFetching || n.isFetching ? "Loading" : r != null && r.length ? "GrantList" : e != null && e.maxAmount && (e != null && e.minAmount) && !f ? "PreQualified" : "Unqualified", [
    o,
    e,
    n.isFetching,
    r,
    s,
    a.isFetching,
    q,
    f
  ]), x = l(() => !!(e && e.minAmount && e.maxAmount), [e]);
  return /* @__PURE__ */ t("div", { className: u.base, children: (() => {
    switch (G) {
      case "Loading":
        return /* @__PURE__ */ t("div", { className: u.skeletonContainer, children: [
          /* @__PURE__ */ t("div", { className: u.headerSkeleton }),
          /* @__PURE__ */ t("div", { className: u.skeleton })
        ] });
      case "Error":
        return /* @__PURE__ */ t("div", { className: u.errorContainer, children: [
          /* @__PURE__ */ t(Q, { hideTitle: m, titleKey: "capital.businessFinancing" }),
          /* @__PURE__ */ t(
            P,
            {
              absolutePosition: !1,
              outlined: !1,
              withImage: !0,
              onContactSupport: p,
              ...S(n.error, p)
            }
          )
        ] });
      case "GrantList":
        return r && /* @__PURE__ */ t(
          O,
          {
            externalDynamicOffersConfig: e,
            grantList: r,
            hideTitle: m,
            newOfferAvailable: x,
            onFundsRequest: A,
            onOfferDismiss: g
          }
        );
      case "PreQualified":
        return /* @__PURE__ */ t(
          M,
          {
            onOfferDismiss: g,
            onOfferOptionsRequest: b,
            skipPreQualifiedIntro: f,
            hideTitle: m,
            dynamicOffer: e,
            onFundsRequest: A
          }
        );
      case "Unqualified":
        return /* @__PURE__ */ t(w, { hideTitle: m });
      default:
        return null;
    }
  })() });
};
export {
  W as CapitalOverview
};
