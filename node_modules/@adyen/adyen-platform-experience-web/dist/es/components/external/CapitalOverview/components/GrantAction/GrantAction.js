import { jsx as r } from "../../../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import { useState as h, useCallback as y, useMemo as O, useEffect as R } from "../../../../../external/preact/hooks/dist/hooks.module.js";
import E from "../../../../../core/Context/useCoreContext.js";
import F from "../../../../../hooks/useTimezoneAwareDateFormatting.js";
import { GRANT_ACTION_CLASS_NAMES as l } from "./constants.js";
import "./GrantAction.scss.js";
import p from "../../../../internal/Alert/Alert.js";
import { AlertTypeOption as u } from "../../../../internal/Alert/types.js";
import { useFetch as S } from "../../../../../hooks/useFetch.js";
import "../../../../../external/preact/compat/dist/compat.module.js";
import { getTopWindowHref as _, setTopWindowHref as b } from "./utils.js";
import d from "../../../../internal/Button/Button.js";
import { DATE_FORMAT_CAPITAL_OVERVIEW as I } from "../../../../../constants/dateFormats.js";
import { useAuthContext as N } from "../../../../../core/Auth/context.js";
import { EMPTY_OBJECT as W } from "../../../../../utils/value/constants.js";
const D = ({ action: n, className: s, offerExpiresAt: m }) => {
  const { i18n: t, updateCore: f } = E(), { dateFormat: T } = F(), { signToSActionDetails: e } = N().endpoints, [i, C] = h(!1), A = y(async () => {
    if (n.type === "signToS")
      return e == null ? void 0 : e(W, {
        query: {
          redirectUrl: _(),
          locale: t.locale
        }
      });
  }, [n, t.locale, e]), { data: o, isFetching: a, error: g } = S({
    fetchOptions: O(() => ({ enabled: !!e && i }), [e, i]),
    queryFn: A
  });
  return R(() => {
    const c = o == null ? void 0 : o.url;
    c && b(c);
  }, [o, i]), g ? /* @__PURE__ */ r(
    p,
    {
      className: s,
      type: u.CRITICAL,
      title: t.get("somethingWentWrongTryRefreshingOrComeBackLater"),
      description: /* @__PURE__ */ r(d, { className: l.button, onClick: f, children: t.get("refresh") })
    }
  ) : /* @__PURE__ */ r(
    p,
    {
      className: s,
      type: u.WARNING,
      title: `${t.get("capital.signTermsAndConditionsToReceiveFunds")}${m ? ` ${t.get("capital.thisOfferExpiresOn", {
        values: {
          date: T(m, I)
        }
      })}` : ""}`,
      description: /* @__PURE__ */ r(
        d,
        {
          className: l.button,
          onClick: () => C(!0),
          disabled: a,
          state: a ? "loading" : void 0,
          children: t.get("capital.goToTermsAndConditions")
        }
      )
    }
  );
};
export {
  D as GrantAction
};
