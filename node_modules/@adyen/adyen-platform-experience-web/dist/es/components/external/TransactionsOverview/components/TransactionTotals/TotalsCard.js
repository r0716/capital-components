import { jsx as r } from "../../../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import { useState as h, useMemo as p } from "../../../../../external/preact/hooks/dist/hooks.module.js";
import c from "../../../../internal/ExpandableCard/ExpandableCard.js";
import { memo as x } from "../../../../../external/preact/compat/dist/compat.module.js";
import { TransactionTotalItem as d } from "../TransactionTotalItem/TransactionTotalItem.js";
import { BaseList as M } from "../../../../internal/BaseList/BaseList.js";
import { useMaxWidthsState as T } from "../../hooks/useMaxWidths.js";
import "./TransactionTotals.scss.js";
const B = x(({ totals: s, isLoading: o, hiddenField: a, fullWidth: l }) => {
  const [m, n] = T(), [i, t] = h(!1), [f, ...u] = p(() => s.map((e) => (e.key = `${e.currency}-${Math.random()}`, e)), [s]);
  return /* @__PURE__ */ r(
    c,
    {
      renderHeader: /* @__PURE__ */ r(
        d,
        {
          isHovered: i,
          total: f,
          hiddenField: a,
          widths: m,
          isHeader: !0,
          isSkeleton: o,
          isLoading: o,
          onWidthsSet: n
        }
      ),
      fullWidth: l,
      onMouseEnter: () => t(!0),
      onFocus: () => t(!0),
      onMouseLeave: () => t(!1),
      onBlur: () => t(!1),
      children: !o && u.length && /* @__PURE__ */ r(M, { children: u.map((e) => /* @__PURE__ */ r("li", { children: /* @__PURE__ */ r(
        d,
        {
          isHovered: i,
          total: e,
          hiddenField: a,
          widths: m,
          onWidthsSet: n
        }
      ) }, e.key)) })
    }
  );
});
export {
  B as TotalsCard
};
