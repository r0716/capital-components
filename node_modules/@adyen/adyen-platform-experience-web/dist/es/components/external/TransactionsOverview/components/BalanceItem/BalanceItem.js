import { jsx as y } from "../../../../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import a from "../../../../../core/Context/useCoreContext.js";
import { useRef as r, useMemo as p } from "../../../../../external/preact/hooks/dist/hooks.module.js";
import { SummaryItem as g } from "../SummaryItem/SummaryItem.js";
const S = ({ balance: e, isHeader: s = !1, isSkeleton: u = !1, isLoading: m = !1, widths: n, onWidthsSet: l, isEmpty: f }) => {
  const { i18n: t } = a(), o = r(null), i = r(null), c = p(
    () => [
      {
        labelKey: "accountBalance",
        ref: o,
        skeletonWidth: 80,
        getValue: () => e && t.amount(e.value, e.currency)
      },
      {
        ref: i,
        skeletonWidth: 40,
        valueHasLabelStyle: !0,
        getValue: () => e == null ? void 0 : e.currency
      }
    ],
    [e, o, t]
  );
  return /* @__PURE__ */ y(
    g,
    {
      isEmpty: f,
      columnConfigs: c,
      isHeader: s,
      isSkeletonVisible: u,
      isLoading: m,
      widths: n,
      onWidthsSet: l
    }
  );
};
export {
  S as BalanceItem
};
