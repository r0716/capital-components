import { useMemo as p, useCallback as q } from "../../../../../../external/preact/hooks/dist/hooks.module.js";
import { selectionOptionsFor as s } from "./utils.js";
import { listFrom as v } from "../../../../../../utils/collection/main.js";
const x = ({
  filterParam: o,
  filterValues: M,
  filters: n,
  defaultFilters: c,
  updateFilters: m
}) => {
  const O = p(() => v((n == null ? void 0 : n[o]) ?? (c == null ? void 0 : c[o]) ?? ""), [c, n, o]), b = p(() => M && s(M), [M]), k = q(
    ({ target: S }) => {
      m == null || m({ [o]: (S == null ? void 0 : S.value) || "" });
    },
    [m, o]
  );
  return { selection: O, selectionOptions: b, updateSelection: k };
}, h = x;
export {
  h as default,
  x as useMultiSelectionFilter
};
