import { struct as E } from "../../../utils/struct/main.js";
import { getter as o, enumerable as s } from "../../../utils/struct/property.js";
const e = Symbol("<<NO_ERR>>");
function c(r) {
  /* istanbul ignore if -- @preserve */
  if (r === e)
    throw new TypeError("Illegal error");
}
const i = () => {
  let r = e;
  const n = () => {
    r = e;
  }, a = (t) => {
    c(t), r = t;
  };
  return E({
    error: o(() => r === e ? void 0 : r),
    hasError: o(() => r !== e),
    reset: s(n),
    set: s(a)
  });
};
export {
  i as createErrorContainer,
  i as default
};
