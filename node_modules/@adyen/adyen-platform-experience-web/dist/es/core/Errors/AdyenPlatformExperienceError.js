var a = Object.defineProperty;
var c = (t, r, e) => r in t ? a(t, r, { enumerable: !0, configurable: !0, writable: !0, value: e }) : t[r] = e;
var o = (t, r, e) => (c(t, typeof r != "symbol" ? r + "" : r, e), e);
class i extends Error {
  constructor(e, s, d, n) {
    super(d);
    o(this, "type");
    o(this, "errorCode");
    o(this, "requestId");
    this.type = e, this.name = e, this.errorCode = n, this.requestId = s;
  }
}
const u = i;
export {
  u as default
};
