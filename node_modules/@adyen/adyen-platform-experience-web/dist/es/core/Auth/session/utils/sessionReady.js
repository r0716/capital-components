import { createDeferred as f } from "../../../../primitives/async/deferred/main.js";
import { isWatchlistUnsubscribeToken as c } from "../../../../primitives/reactive/watchlist/main.js";
import { boolOrTrue as l } from "../../../../utils/value/bool.js";
const a = async (e) => {
  const r = f(), i = e.context.refreshing;
  let t, s, o = e.subscribe((n) => {
    if (c(n)) {
      o(), o = null, r.resolve();
      return;
    }
    if (t ?? (t = e.context.refreshing), !e.context.refreshing) {
      if (l(e.context.isExpired) && (s ?? (s = !(i || t)))) {
        s = !1, e.refresh();
        return;
      }
      r.resolve();
    }
  });
  return r.promise;
}, b = a;
export {
  b as default
};
