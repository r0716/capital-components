import { jsx as d } from "../../external/preact/jsx-runtime/dist/jsxRuntime.module.js";
import { toChildArray as l } from "../../external/preact/dist/preact.module.js";
import { useMemo as t, useEffect as u } from "../../external/preact/hooks/dist/hooks.module.js";
import { CoreContext as p } from "./CoreContext.js";
import y from "../../hooks/useBooleanState.js";
import C from "../Localization/Localization.js";
const v = ({
  i18n: o = new C().i18n,
  children: a,
  commonProps: r,
  loadingContext: e,
  updateCore: s,
  externalErrorHandler: m
}) => {
  const [n, c] = y(!1), i = t(() => r || {}, [r]), f = t(() => e ?? "", [e]);
  return u(() => {
    (async () => {
      await (o == null ? void 0 : o.ready), c(!0);
    })().catch();
  }, []), n ? /* @__PURE__ */ d(p.Provider, { value: { i18n: o, commonProps: i, loadingContext: f, updateCore: s, externalErrorHandler: m }, children: l(a) }) : null;
}, z = v;
export {
  z as default
};
