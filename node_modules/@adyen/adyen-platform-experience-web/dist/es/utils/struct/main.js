import { fn as o } from "../common.js";
import { EMPTY_OBJECT as r } from "../value/constants.js";
import { truthify as e } from "../value/bool.js";
import { isPlainObject as c } from "../value/is.js";
const n = (t, i = r) => c(t) ? t : n(i, r), s = o(Object.create, void 0), P = o(s, void 0, null), a = (t = r) => Object.freeze({ ...t, defineProperty: e, set: e });
export {
  n as asPlainObject,
  P as struct,
  s as structFrom,
  a as withFreezeProxyHandlers
};
